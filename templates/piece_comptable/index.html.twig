{% extends 'base.html.twig' %}

{% block title %}Piece Comptable index{% endblock %}

{% block body %}
    <h1>Create new Piece Comptable</h1>
    <div class="header">
        <h1 class="header-title">
            Piece Comptable
        </h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path ('app_tiers_index')}}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ path ('app_tiers_index')}}">Piece Comptable</a></li>
            </ol>
        </nav>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <form id="search-form">
                            <div class="row align-items-center">
                                <div class="col-lg-2"> <br>
                                    <div class="input-group mb-3">
                                        <label for="from-date" class="input-group-text">Du</label>
                                        <input type="date" class="form-control" id="from-date">
                                    </div>
                                </div>
                                <div class="col-lg-2"><br>
                                    <div class="input-group mb-3">
                                        <label for="to-date" class="input-group-text">Au</label>
                                        <input type="date" class="form-control" id="to-date">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <select id="journal-select" class="form-control">
                                        <option value="">Tous les journaux</option>
                                        {% for journal in journals %}
                                            <option value="{{ journal.id }}">{{ journal.getJournal() }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                                <div class="col-lg-2">
                                    <div class="position-relative">

                                        <button type="submit" class="btn btn-primary"> <i class="fas fa-search"></i> Rechercher</button>
                                </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="position-relative">
                                        <a href="{{ path('app_piece_comptable_new')}}" class="btn btn-primary ">
                                            <i class='bx bxs-plus-square'></i>
                                            Ajouter</a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                 </div>
               </div>
           </div>
            <div class="row">
                <div class="col-12">
                    <div class="card">
                    <div class="card-body">
                        <table class="table" id="piece-comptable-table">
                            <!-- Table Head -->
                            <thead>
                            <tr>
                                <th>Numéro PC</th>
                                <th>Journal</th>
                                <th>Date</th>
                                <th>Monnaie</th>
                                <th>Libelle</th>
                                <th>Tauxchange</th>
                                <th></th>
                            </tr>
                            </thead>
                            <!-- Table Body -->
                            <tbody>
                            {% for piece_comptable in piece_comptables %}
                                <tr>
                                    <td>{{ piece_comptable.numeropc }}</td>
                                    <td>{{ piece_comptable.journal.getJournal() }}</td>
                                    <td>{{ piece_comptable.datepiece ? piece_comptable.datepiece|date('Y-m-d') : '' }}</td>
                                    <td>{{ piece_comptable.monnaie.getMonLib() }}</td>
                                    <td>{{ piece_comptable.libelle }}</td>
                                    <td>{{ piece_comptable.tauxchange }}</td>
                                    <td width="5%">
                                        <a href="{{ path('app_piece_comptable_edit', {'id': piece_comptable.id}) }}"><i class="align-middle fas fa-fw fa-pen " style="color: dimgray;"></i></a>
                                    </td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="6">no records found</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

    {% block javascripts %}
        {{ parent() }}
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                console.log("Script exécuté");

                let table = $('#piece-comptable-table').DataTable();

                const searchForm = document.getElementById('search-form');
                const fromDateInput = document.getElementById('from-date');
                const toDateInput = document.getElementById('to-date');
                const journalSelect = document.getElementById('journal-select');
                const tableBody = document.querySelector('#piece-comptable-table tbody');

                // Sélection par défaut de la date du premier jour de l'année jusqu'à aujourd'hui
                const currentDate = new Date();
                const currentYear = currentDate.getFullYear();
                const formattedStartDate = new Date(currentYear, 0, 1).toISOString().split('T')[0];
                const formattedEndDate = currentDate.toISOString().split('T')[0];
                fromDateInput.value = formattedStartDate;
                toDateInput.value = formattedEndDate;

                searchForm.addEventListener('submit', function (event) {
                    event.preventDefault();

                    // Désactiver le bouton de soumission pour éviter les soumissions multiples
                    searchForm.querySelector('button[type="submit"]').disabled = true;

                    const selectedJournal = journalSelect.value;
                    const fromDateValue = fromDateInput.value;
                    const toDateValue = toDateInput.value;
                    const formattedFromDate = new Date(fromDateValue).toISOString().split('T')[0];
                    const formattedToDate = new Date(toDateValue).toISOString().split('T')[0];

                    // Effacer les anciennes données de la DataTable
                    table.clear().draw();

                    // Requête AJAX pour obtenir les nouvelles données
                    fetch('/piece/comptable/searchpiececomptable/', {
                        method: 'POST',
                        body: JSON.stringify({
                            fromDate: formattedFromDate,
                            toDate: formattedToDate,
                            journal: selectedJournal
                        }),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Erreur lors de la récupération des données');
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log("Données reçues du serveur :", data); // Affichage des données dans la console

                            // Mettre à jour la table avec les nouvelles données reçues
                            data.forEach(pieceComptable => {
                                table.row.add([
                                    pieceComptable.numeropc,
                                    pieceComptable.journal,
                                    pieceComptable.datepiece ? pieceComptable.datepiece : '',
                                    pieceComptable.monnaie,
                                    pieceComptable.libelle,
                                    pieceComptable.tauxchange,
                                    `<a href="${pieceComptable.editUrl}"><i class="align-middle fas fa-fw fa-pen" style="color: dimgray;"></i></a>`
                                ]);
                            });

                            // Redessiner la DataTable avec les nouvelles données
                            table.draw();
                        })
                        .catch(error => {
                            console.error(error);
                            // Afficher un message d'erreur ou effectuer une action appropriée en cas d'erreur
                        })
                        .finally(() => {
                            // Réactiver le bouton de soumission une fois que la requête est terminée (avec succès ou en erreur)
                            searchForm.querySelector('button[type="submit"]').disabled = false;
                        });
                });
            });
        </script>
    {% endblock %}


